git config （--global）
git help （命令）
git init 把当前目录初始化为仓库
git clone ［链接］ （本地仓库名，如不指定为origin）
git add ［文件或正则］ （-f来添加被.gitignore忽略的文件）
git diff （--staged已暂存，未提交）未暂存
git commit 启动文本编辑器来编辑提交说明 （-m “提交说明” ）（-a 把跟踪的所有文件暂存起来一并提交）（--amend 把上次提交后的修改追加到上次提交）
git rm ［文件名］从暂存区移除文件。如果文件在工作区也存在，那么同时移除工作区中的文件。如果文件只存在于工作区而不存在于暂存区，那么将不会做出改动。如果被对跟踪的文件做出了未暂存的修改，那么执行git rm将会提示要带上-f来强制删除。
git mv ［旧文件名］ ［新文件名］重命名，相当于mv ［旧文件名］ ［新文件名］，git rm ［旧文件名］，git add ［新文件名］。
git reset HEAD ［文件名］ 取消暂存。无论该文件暂存后在工作区中是否又作了修改，暂存都会被取消。
git checkout -- ［文件名］ 还原成上次提交的样子。“--”后面必须有个空格。
git remote （-v） 显示远程仓库。
git remote add ［本地名称即下文仓库名］［URL］添加远程仓库
git fetch ［仓库名］从远程仓库中抓取
git push ［仓库名］ ［要推送的分支或标签］向远程仓库推送
git push ［仓库名］ --tags 向远程仓库推送所有标签。和当前分支无关。
git remote show ［仓库名］显示仓库信息
git remote rename ［仓库原名］ ［仓库新名］ 更改仓库名
git remote rm ［仓库名］移除仓库
git tag 列出标签
git tag ［标签名］ （提交校验和，可以在单一的情况下只列出前几位，下同） 以校验和对应提交创建轻量标签，若不指定则为当前提交
git tag -a ［标签名］ （提交校验和） （-m “附注”） 以校验和对应提交创建附注标签，若不指定则为当前
git tag -d ［标签名］ 删除标签
git show ［标签名］ 显示该标签的信息以及对应提交
git config --global alias.［命令别名］ ［'正常命令名'］ 为某一命令创建别名